version: "3.8"
services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_general_ci"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_PASSWORD: example
      MYSQL_DATABASE: celery
      TZ: "Asia/Shanghai"
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    restart: unless-stopped

  # pg-db:
  #   image: postgres
  #   container_name: postgres_db
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example
  #     POSTGRES_DB: crewai
  #     TZ: "Asia/Shanghai"
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./postgres/data:/var/lib/postgresql/data
  #   restart: unless-stopped

  redis-db:
    image: redis:latest
    container_name: redis_db
    ports:
      - "6379:6379"
    command: redis-server --requirepass example
    volumes:
      - ./redis/data:/data
#   rabbit-mq:
#     image: rabbitmq:4.1-management
#     container_name: rabbit-mq
#     ports:
#       - "5672:5672" # AMQP协议端口
#       - "15672:15672" # RabbitMQ管理界面端口
#     volumes:
#       - ./rabbitmq/data:/var/lib/rabbitmq # 挂载数据目录
#     environment:
#       - TZ=Asia/Shanghai
#       - RABBITMQ_DEFAULT_USER=root # 默认用户名
#       - RABBITMQ_DEFAULT_PASS=example # 默认密码
#     restart: unless-stopped

#   mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     ports:
#       - 27017:27017
#     volumes:
#       - source: express-mongo
#         target: /data/db
#         type: volume
#       - source: express-mongo-configdb
#         target: /data/configdb
#         type: volume

#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#       - 8081:8081
#     environment:
#       ME_CONFIG_BASICAUTH_USERNAME: root
#       ME_CONFIG_BASICAUTH_PASSWORD: example
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#       ME_CONFIG_MONGODB_SERVER: mongo
#     depends_on:
#       - mongo

#   minio:
#     image: minio/minio
#     ports:
#       - "9000:9000"
#       - "9001:9001"
#     environment:
#       - MINIO_ROOT_USER=root
#       - MINIO_ROOT_PASSWORD=minio123
#     command: server /data --address :9000 --console-address :9001
#     volumes:
#       - source: express-minio
#         target: /data
#         type: volume

# volumes:
#   express-mongo:
#   express-mongo-configdb:
#   express-minio:
